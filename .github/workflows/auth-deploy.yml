name: Deploy Auth Domain to AWS EC2

on:
  push:
    branches:
      - qa
    paths:
      - 'services/auth/**'

jobs:
  deploy-auth:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Set up Java 17 and Maven
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: '17'

      - name: 🏗️ Build all JARs
        run: |
          cd services/auth/login-service && mvn clean package -DskipTests
          cd ../register-service && mvn clean package -DskipTests
          cd ../session-service && mvn clean package -DskipTests
          cd ../tokens-service && mvn clean package -DskipTests

      - name: 🐳 Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build & Push login-service
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth/login-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/login-service:latest

      - name: 🐳 Build & Push register-service
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth/register-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/register-service:latest

      - name: 🐳 Build & Push session-service
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth/session-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/session-service:latest

      - name: 🐳 Build & Push tokens-service
        uses: docker/build-push-action@v5
        with:
          context: ./services/auth/tokens-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/tokens-service:latest

      - name: 📤 Copy docker-compose.auth-deploy.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEYPAIR }}
          source: ./services/auth/docker-compose.auth-deploy.yml
          target: /home/ubuntu/lightbuild/

      - name: 🚀 Restart Docker Compose stack in EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEYPAIR }}
          script: |
            cd /home/ubuntu/lightbuild/

            echo "Stopping previous containers..."
            docker compose -f docker-compose.auth-deploy.yml down

            echo "Pulling updated images..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/login-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/register-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/session-service:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/tokens-service:latest

            echo "Starting services..."
            docker compose -f docker-compose.auth-deploy.yml up -d --remove-orphans

            docker ps -a
