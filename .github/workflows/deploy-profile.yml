name: Deploy Profile Microservices to EC2

on:
  push:
    paths:
      - 'services/users/profile/**'
    branches:
      - qa

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  EC2_PROFILE_HOST: ${{ secrets.EC2_PROFILE_HOST }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  EC2_KEYPAIR: ${{ secrets.EC2_KEYPAIR }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Login en Docker Hub
      - name: Login to Docker Hub
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # 3Ô∏è‚É£ Build & Push de im√°genes Docker
      - name: Build & Push Docker Images
        working-directory: services/users/profile
        run: |
          services=("create" "get" "update" "delete")
          for svc in "${services[@]}"; do
            docker build -t "$DOCKER_USERNAME/${svc}-profile-service:latest" "./${svc}-profile-service"
            docker push "$DOCKER_USERNAME/${svc}-profile-service:latest"
          done

      # 4Ô∏è‚É£ Copiar docker-compose al EC2
      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_PROFILE_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEYPAIR }}
          source: services/users/profile/docker-compose.profile-deploy.yml
          target: /home/ubuntu/profile-deployment/
          strip_components: 4

      # 5Ô∏è‚É£ Crear archivos .env en EC2 usando secretos
      - name: Create .env files on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_PROFILE_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEYPAIR }}
          script: |
            echo "üîß Generando archivos .env desde GitHub Secrets..."
            MONGO_URI="${{ secrets.PROFILE_MONGO_URI }}"

            mkdir -p /home/ubuntu/profile-deployment

            declare -A PORTS=(
              [create]=${{ secrets.CREATE_PROFILE_PORT }}
              [get]=${{ secrets.GET_PROFILE_PORT }}
              [update]=${{ secrets.UPDATE_PROFILE_PORT }}
              [delete]=${{ secrets.DELETE_PROFILE_PORT }}
            )

            for svc in "${!PORTS[@]}"; do
              mkdir -p "/home/ubuntu/profile-deployment/${svc}-profile-service"
              echo "PORT=${PORTS[$svc]}" > "/home/ubuntu/profile-deployment/${svc}-profile-service/.env"
              echo "MONGO_URI=$MONGO_URI" >> "/home/ubuntu/profile-deployment/${svc}-profile-service/.env"
            done

            echo "‚úÖ Archivos .env generados:"
            find /home/ubuntu/profile-deployment -name .env -exec cat {} \;

      # 6Ô∏è‚É£ Desplegar los microservicios en EC2
      - name: Deploy Services via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_PROFILE_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEYPAIR }}
          script: |
            cd /home/ubuntu/profile-deployment
            echo "‚õîÔ∏è Parando servicios anteriores si existen..."
            docker compose -f docker-compose.profile-deploy.yml down || true

            echo "‚¨áÔ∏è Haciendo pull de las √∫ltimas im√°genes..."
            docker compose -f docker-compose.profile-deploy.yml pull

            echo "üöÄ Levantando los nuevos servicios..."
            docker compose -f docker-compose.profile-deploy.yml up -d --build

            echo "üì¶ Contenedores activos:"
            docker ps --filter "name=profile"
